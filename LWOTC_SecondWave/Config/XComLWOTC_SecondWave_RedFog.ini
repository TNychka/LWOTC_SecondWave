[LWOTC_SecondWave.RedFog_X2Ability]
RedFogIconImagePath="img:///UILibrary_LWToolbox.Status_RedFog"

[LWOTC_SecondWave.RedFog_X2Effect]
+TypesImmuneToRedFog=Sectopod
+TypesImmuneToRedFog=Archon

+TypesHalfImmuneToRedFog=Cyberus

+LinearRedFogPenalties=(Stat=eStat_Offense, MaxPenalty=40)
+LinearRedFogPenalties=(Stat=eStat_Mobility, MaxPenalty=6)
+LinearRedFogPenalties=(Stat=eStat_Will, MaxPenalty=30)
+LinearRedFogPenalties=(Stat=eStat_Hacking, MaxPenalty=30)

;Linear Multiplicative example -- use this if PenaltyType = MODOP_Multiplication
;+LinearRedFogPenalties=(Stat=eStat_Offense, MaxPenalty=0.5)
;+LinearRedFogPenalties=(Stat=eStat_Mobility, MaxPenalty=0.25)
;+LinearRedFogPenalties=(Stat=eStat_Will, MaxPenalty=0.75)
;+LinearRedFogPenalties=(Stat=eStat_Hacking, MaxPenalty=0.75)


;Pure Quadratic
+QuadraticRedFogPenalties=(Stat=eStat_Offense, InitialRate=0.0, MaxPenalty=40)
+QuadraticRedFogPenalties=(Stat=eStat_Mobility, InitialRate=0.0, MaxPenalty=6)
+QuadraticRedFogPenalties=(Stat=eStat_Will, InitialRate=0.0, MaxPenalty=30)
+QuadraticRedFogPenalties=(Stat=eStat_Hacking, InitialRate=0.0, MaxPenalty=30)

;Pure Linear, expressed in quadratic equations (for scaling purposes)
;+QuadraticRedFogPenalties=(Stat=eStat_Offense, InitialRate=40.0, MaxPenalty=40)
;+QuadraticRedFogPenalties=(Stat=eStat_Mobility, InitialRate=6.0, MaxPenalty=6)
;+QuadraticRedFogPenalties=(Stat=eStat_Will, InitialRate=30.0, MaxPenalty=30)

;eStat_Invalid,
;eStat_UtilityItems,
;eStat_HP,
;eStat_Offense,
;eStat_Defense,
;eStat_Mobility,
;eStat_Will,
;eStat_Hacking,              // Used in calculating chance of success for hacking attempts.
;eStat_SightRadius,
;eStat_FlightFuel,
;eStat_AlertLevel,
;eStat_BackpackSize,
;eStat_Dodge,
;eStat_ArmorChance,
;eStat_ArmorMitigation,
;eStat_ArmorPiercing,
;eStat_PsiOffense,
;eStat_HackDefense,          // Units use this when defending against hacking attempts.
;eStat_DetectionRadius,		// The radius at which this unit will detect other concealed units.								Overall Detection Range = 
;eStat_DetectionModifier,	// The modifier this unit will apply to the range at which other units can detect this unit.	Detector.DetectionRadius * (1.0 - Detectee.DetectionModifier)
;eStat_CritChance,
;eStat_Strength,
;eStat_SeeMovement,
;eStat_HearingRadius,
;eStat_CombatSims,
;eStat_FlankingCritChance,
;eStat_ShieldHP,
;eStat_Job,
;eStat_FlankingAimBonus,
